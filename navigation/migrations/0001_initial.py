# Generated by Django 2.2.9 on 2020-01-31 14:12

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.blocks.static_block
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
    ]

    operations = [
        migrations.CreateModel(
            name='PrimaryMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UsefulLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UtilityMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UtilityMenuLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('label_en', models.CharField(max_length=255, null=True, verbose_name='Label')),
                ('label_fr', models.CharField(max_length=255, null=True, verbose_name='Label')),
                ('label_es', models.CharField(max_length=255, null=True, verbose_name='Label')),
                ('label_pt', models.CharField(max_length=255, null=True, verbose_name='Label')),
                ('item', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='utility_menu_links', to='navigation.UtilityMenu')),
                ('page', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UsefulLinksMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('label_en', models.CharField(max_length=255, null=True, verbose_name='Label')),
                ('label_fr', models.CharField(max_length=255, null=True, verbose_name='Label')),
                ('label_es', models.CharField(max_length=255, null=True, verbose_name='Label')),
                ('label_pt', models.CharField(max_length=255, null=True, verbose_name='Label')),
                ('item', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='useful_links', to='navigation.UsefulLinks')),
                ('page', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrimaryMenuLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('label_en', models.CharField(max_length=255, null=True, verbose_name='Label')),
                ('label_fr', models.CharField(max_length=255, null=True, verbose_name='Label')),
                ('label_es', models.CharField(max_length=255, null=True, verbose_name='Label')),
                ('label_pt', models.CharField(max_length=255, null=True, verbose_name='Label')),
                ('meganav', wagtail.core.fields.StreamField([('type_a', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 4\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))])), ('nested_page_list', wagtail.core.blocks.StructBlock([('groups', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Optional: top level page for the group', label='Top level page', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page group', label='Title', required=False)), ('page_group', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), help_text='Optional: group of sub pages, displayed as an indented list', required=False))])))]))], max_num=4, min_num=0, required=False))])), ('type_b', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 2\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))])), ('featured', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description')), ('image', wagtail.images.blocks.ImageChooserBlock(help_text='Optional: image for the module. If not selected, the page image will be used, or a fallback if not available', required=False)), ('secondary_page', wagtail.core.blocks.PageChooserBlock(help_text='Optional: secondary page link', required=False)), ('link_label', wagtail.core.blocks.CharBlock(help_text='Optional: label for the secondary page link', label='Link label', required=False))]))], block_counts={'featured': {'max_num': 1}, 'page_list': {'max_num': 1}}, max_num=2, min_num=0, required=False))])), ('type_c', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 7\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('focus_item', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description')), ('external_url', wagtail.core.blocks.URLBlock(help_text='Optional: external URL for the secondary link. Defaults to the selected page link', required=False)), ('link_label', wagtail.core.blocks.CharBlock(help_text='Label for the secondary page link', label='Link label'))])), ('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))]))], max_num=2, min_num=0, required=False))]))], blank=True)),
                ('meganav_en', wagtail.core.fields.StreamField([('type_a', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 4\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))])), ('nested_page_list', wagtail.core.blocks.StructBlock([('groups', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Optional: top level page for the group', label='Top level page', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page group', label='Title', required=False)), ('page_group', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), help_text='Optional: group of sub pages, displayed as an indented list', required=False))])))]))], max_num=4, min_num=0, required=False))])), ('type_b', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 2\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))])), ('featured', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description')), ('image', wagtail.images.blocks.ImageChooserBlock(help_text='Optional: image for the module. If not selected, the page image will be used, or a fallback if not available', required=False)), ('secondary_page', wagtail.core.blocks.PageChooserBlock(help_text='Optional: secondary page link', required=False)), ('link_label', wagtail.core.blocks.CharBlock(help_text='Optional: label for the secondary page link', label='Link label', required=False))]))], block_counts={'featured': {'max_num': 1}, 'page_list': {'max_num': 1}}, max_num=2, min_num=0, required=False))])), ('type_c', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 7\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('focus_item', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description')), ('external_url', wagtail.core.blocks.URLBlock(help_text='Optional: external URL for the secondary link. Defaults to the selected page link', required=False)), ('link_label', wagtail.core.blocks.CharBlock(help_text='Label for the secondary page link', label='Link label'))])), ('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))]))], max_num=2, min_num=0, required=False))]))], blank=True, null=True)),
                ('meganav_fr', wagtail.core.fields.StreamField([('type_a', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 4\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))])), ('nested_page_list', wagtail.core.blocks.StructBlock([('groups', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Optional: top level page for the group', label='Top level page', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page group', label='Title', required=False)), ('page_group', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), help_text='Optional: group of sub pages, displayed as an indented list', required=False))])))]))], max_num=4, min_num=0, required=False))])), ('type_b', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 2\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))])), ('featured', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description')), ('image', wagtail.images.blocks.ImageChooserBlock(help_text='Optional: image for the module. If not selected, the page image will be used, or a fallback if not available', required=False)), ('secondary_page', wagtail.core.blocks.PageChooserBlock(help_text='Optional: secondary page link', required=False)), ('link_label', wagtail.core.blocks.CharBlock(help_text='Optional: label for the secondary page link', label='Link label', required=False))]))], block_counts={'featured': {'max_num': 1}, 'page_list': {'max_num': 1}}, max_num=2, min_num=0, required=False))])), ('type_c', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 7\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('focus_item', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description')), ('external_url', wagtail.core.blocks.URLBlock(help_text='Optional: external URL for the secondary link. Defaults to the selected page link', required=False)), ('link_label', wagtail.core.blocks.CharBlock(help_text='Label for the secondary page link', label='Link label'))])), ('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))]))], max_num=2, min_num=0, required=False))]))], blank=True, null=True)),
                ('meganav_es', wagtail.core.fields.StreamField([('type_a', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 4\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))])), ('nested_page_list', wagtail.core.blocks.StructBlock([('groups', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Optional: top level page for the group', label='Top level page', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page group', label='Title', required=False)), ('page_group', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), help_text='Optional: group of sub pages, displayed as an indented list', required=False))])))]))], max_num=4, min_num=0, required=False))])), ('type_b', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 2\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))])), ('featured', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description')), ('image', wagtail.images.blocks.ImageChooserBlock(help_text='Optional: image for the module. If not selected, the page image will be used, or a fallback if not available', required=False)), ('secondary_page', wagtail.core.blocks.PageChooserBlock(help_text='Optional: secondary page link', required=False)), ('link_label', wagtail.core.blocks.CharBlock(help_text='Optional: label for the secondary page link', label='Link label', required=False))]))], block_counts={'featured': {'max_num': 1}, 'page_list': {'max_num': 1}}, max_num=2, min_num=0, required=False))])), ('type_c', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 7\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('focus_item', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description')), ('external_url', wagtail.core.blocks.URLBlock(help_text='Optional: external URL for the secondary link. Defaults to the selected page link', required=False)), ('link_label', wagtail.core.blocks.CharBlock(help_text='Label for the secondary page link', label='Link label'))])), ('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))]))], max_num=2, min_num=0, required=False))]))], blank=True, null=True)),
                ('meganav_pt', wagtail.core.fields.StreamField([('type_a', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 4\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))])), ('nested_page_list', wagtail.core.blocks.StructBlock([('groups', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Optional: top level page for the group', label='Top level page', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page group', label='Title', required=False)), ('page_group', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), help_text='Optional: group of sub pages, displayed as an indented list', required=False))])))]))], max_num=4, min_num=0, required=False))])), ('type_b', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 2\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))])), ('featured', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description')), ('image', wagtail.images.blocks.ImageChooserBlock(help_text='Optional: image for the module. If not selected, the page image will be used, or a fallback if not available', required=False)), ('secondary_page', wagtail.core.blocks.PageChooserBlock(help_text='Optional: secondary page link', required=False)), ('link_label', wagtail.core.blocks.CharBlock(help_text='Optional: label for the secondary page link', label='Link label', required=False))]))], block_counts={'featured': {'max_num': 1}, 'page_list': {'max_num': 1}}, max_num=2, min_num=0, required=False))])), ('type_c', wagtail.core.blocks.StructBlock([('highlight', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description'))])), ('columns_label', wagtail.core.blocks.static_block.StaticBlock(admin_text='\n            <div class="help-block help-info">\n                <p>\n                    <strong>Columns</strong><br>\n                    Column elements for the meganav module.<br>\n                    Maximum number of items: 7\n                </p>\n            </div>\n            ')), ('columns', wagtail.core.blocks.StreamBlock([('focus_item', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(help_text='Page for title and link')), ('description', wagtail.core.blocks.TextBlock(help_text='Description for the module', label='Description')), ('external_url', wagtail.core.blocks.URLBlock(help_text='Optional: external URL for the secondary link. Defaults to the selected page link', required=False)), ('link_label', wagtail.core.blocks.CharBlock(help_text='Label for the secondary page link', label='Link label'))])), ('page_list', wagtail.core.blocks.StructBlock([('use_first_page_as_title', wagtail.core.blocks.BooleanBlock(help_text='Optional: if checked, the first page in the list will be displayed as a title', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Optional: plain text title for the page list', label='Title', required=False)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional: description for the page list', label='Description', required=False)), ('page_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.PageChooserBlock(), label='Pages'))]))], max_num=2, min_num=0, required=False))]))], blank=True, null=True)),
                ('item', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_menu_links', to='navigation.PrimaryMenu')),
                ('page', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
